# # .github/workflows/grade-replies.yml
# name: Grade Replies
# on:
#   schedule:
#     - cron: "*/10 * * * *"
#   workflow_dispatch:       # ðŸ‘ˆ allows manual triggering
# jobs:
#   es_answers:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-python@v5
#         with: { python-version: "3.11" }
#       - run: pip install -r requirements.txt
#       - run: python quiz_email.py --mode answers --lang es
#         env:
#           OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#           SMTP_HOST: smtp.gmail.com
#           SMTP_PORT: 587
#           SMTP_USER: ${{ secrets.SMTP_USER }}
#           SMTP_PASS: ${{ secrets.SMTP_PASS }}
#           IMAP_HOST: imap.gmail.com
#           IMAP_PORT: 993
#           IMAP_USER: ${{ secrets.IMAP_USER }}
#           IMAP_PASS: ${{ secrets.IMAP_PASS }}
#           ES_RECIPIENTS: ${{ secrets.ES_RECIPIENTS }}
#   pt_answers:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-python@v5
#         with: { python-version: "3.11" }
#       - run: pip install -r requirements.txt
#       - run: python quiz_email.py --mode answers --lang pt
#         env:
#           OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#           SMTP_HOST: smtp.gmail.com
#           SMTP_PORT: 587
#           SMTP_USER: ${{ secrets.SMTP_USER }}
#           SMTP_PASS: ${{ secrets.SMTP_PASS }}
#           IMAP_HOST: imap.gmail.com
#           IMAP_PORT: 993
#           IMAP_USER: ${{ secrets.IMAP_USER }}
#           IMAP_PASS: ${{ secrets.IMAP_PASS }}
#           PT_RECIPIENTS: ${{ secrets.PT_RECIPIENTS }}




# .github/workflows/grade-replies.yml
name: Grade Replies

on:
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch:

permissions:
  contents: write   # needed to push with GITHUB_TOKEN

concurrency:
  group: grade-replies-${{ github.ref }}
  cancel-in-progress: true

jobs:
  grade_and_commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Grade ES replies
        run: python quiz_email.py --mode answers --lang es
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SMTP_HOST: smtp.gmail.com
          SMTP_PORT: 587
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          IMAP_HOST: imap.gmail.com
          IMAP_PORT: 993
          IMAP_USER: ${{ secrets.IMAP_USER }}
          IMAP_PASS: ${{ secrets.IMAP_PASS }}
          ES_RECIPIENTS: ${{ secrets.ES_RECIPIENTS }}

      - name: Grade PT replies
        run: python quiz_email.py --mode answers --lang pt
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SMTP_HOST: smtp.gmail.com
          SMTP_PORT: 587
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          IMAP_HOST: imap.gmail.com
          IMAP_PORT: 993
          IMAP_USER: ${{ secrets.IMAP_USER }}
          IMAP_PASS: ${{ secrets.IMAP_PASS }}
          PT_RECIPIENTS: ${{ secrets.PT_RECIPIENTS }}

      - name: Commit and push data changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # If you only ever change files under data/
          git add data/

          # If sometimes other files change (logs, reports), you can widen scope:
          # git add -A

          git commit -m "Grade replies: update data (es, pt) [skip ci]" || echo "No changes to commit"

          # Rebase in case another workflow pushed in the last minutes
          CURRENT_BRANCH="${GITHUB_REF##*/}"
          git pull --rebase origin "$CURRENT_BRANCH" || true
          git push origin "$CURRENT_BRANCH" || true