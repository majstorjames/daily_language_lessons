# .github/workflows/grade-replies.yml
name: Grade Replies

on:
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch:

permissions:
  contents: write  # allow pushes with GITHUB_TOKEN

concurrency:
  group: grade-replies-${{ github.ref }}
  cancel-in-progress: true

jobs:
  grade_and_commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (with push token)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Grade ES replies
        run: python quiz_email.py --mode answers --lang es
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SMTP_HOST: smtp.gmail.com
          SMTP_PORT: 587
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          IMAP_HOST: imap.gmail.com
          IMAP_PORT: 993
          IMAP_USER: ${{ secrets.IMAP_USER }}
          IMAP_PASS: ${{ secrets.IMAP_PASS }}
          ES_RECIPIENTS: ${{ secrets.ES_RECIPIENTS }}

      - name: Grade PT replies
        run: python quiz_email.py --mode answers --lang pt
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SMTP_HOST: smtp.gmail.com
          SMTP_PORT: 587
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          IMAP_HOST: imap.gmail.com
          IMAP_PORT: 993
          IMAP_USER: ${{ secrets.IMAP_USER }}
          IMAP_PASS: ${{ secrets.IMAP_PASS }}
          PT_RECIPIENTS: ${{ secrets.PT_RECIPIENTS }}

      - name: Commit & push data changes (rebase-safe with retries)
        shell: bash
        run: |
          set -e

          BRANCH="${GITHUB_REF_NAME}"

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage only data/ (widen to -A if you also want other files)
          git add data/ || true

          # If nothing staged, exit cleanly
          if git diff --staged --quiet; then
            echo "No changes detected; nothing to commit."
            exit 0
          fi

          git commit -m "Grade replies: update data (es, pt) [skip ci]"

          # Rebase & retry push up to 3 times to avoid non-fast-forward failures
          for i in 1 2 3; do
            git pull --rebase --autostash origin "$BRANCH" || true
            if git push origin "$BRANCH"; then
              echo "Pushed on attempt $i"
              exit 0
            fi
            echo "Push failed (attempt $i). Retryingâ€¦"
            sleep 2
          done

          echo "Failed to push after retries."
          exit 1